from flask import Flask, jsonify, send_from_directory, request
from flask_sqlalchemy import SQLAlchemy
import os

db = SQLAlchemy()


def create_app():
    app = Flask(__name__)
    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///twitter_clone.db'
    db.init_app(app)

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    static_path = os.path.join(os.path.dirname(__file__), 'static')

    def get_api_key():
        headers = request.headers

        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        api_key = (
                headers.get('Api-Key') or
                headers.get('api-key') or
                headers.get('API-Key') or
                headers.get('app-key') or
                'test-key'  # Fallback
        )

        # 2. –ï—Å–ª–∏ –∫–ª—é—á "test" - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ "test-key"
        if api_key == 'test':
            print("‚ö†Ô∏è –ò—Å–ø—Ä–∞–≤–ª—è–µ–º API key: 'test' ‚Üí 'test-key'")
            api_key = 'test-key'

        return api_key

    # –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    @app.route('/')
    def index():
        return send_from_directory(static_path, 'index.html')

    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    @app.route('/<path:path>')
    def static_files(path):
        return send_from_directory(static_path, path)

    @app.route('/api/login', methods=['POST'])
    def login():
        data = request.get_json() or {}
        api_key = data.get('api_key') or data.get('apiKey') or 'test-key'

        if api_key == 'test':
            api_key = 'test-key'

        return jsonify({
            "result": True,
            "message": "Login successful",
            "user": {"id": 1, "name": "Test User"},
            "api_key": api_key
        })

    # Health check
    @app.route('/api/health')
    def health():
        return jsonify({"status": "ok", "message": "Server is working"})

    # /api/users/me
    @app.route('/api/users/me')
    def user_me():
        api_key = get_api_key()

        print(f"üîç Received headers: {dict(request.headers)}")
        print(f"üîç Using API key: {api_key}")

        return jsonify({
            "result": True,
            "user": {
                "id": 1,
                "name": "Test User",
                "followers": [],
                "following": []
            }
        })

    @app.route('/api/tweets', methods=['GET'])
    def get_tweets():
        api_key = get_api_key()

        # –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–≤–∏—Ç—ã
        return jsonify({
            "result": True,
            "tweets": [
                {
                    "id": 1,
                    "content": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏–∫—Ä–æ–±–ª–æ–≥! üéâ",
                    "attachments": [],
                    "author": {"id": 1, "name": "Test User"},
                    "likes": [{"user_id": 1, "name": "Test User"}]
                },
                {
                    "id": 2,
                    "content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–≤–∏—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏",
                    "attachments": [],
                    "author": {"id": 1, "name": "Test User"},
                    "likes": []
                },
                {
                    "id": 3,
                    "content": "API key –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏! ‚úÖ",
                    "attachments": [],
                    "author": {"id": 1, "name": "Test User"},
                    "likes": [{"user_id": 1, "name": "Test User"}]
                }
            ]
        })

    @app.route('/api/tweets', methods=['POST'])
    def create_tweet():
        api_key = get_api_key()

        data = request.get_json() or {}
        tweet_data = data.get('tweet_data', '–ù–æ–≤—ã–π —Ç–≤–∏—Ç')

        return jsonify({
            "result": True,
            "tweet_id": 999,
            "message": f"–¢–≤–∏—Ç —Å–æ–∑–¥–∞–Ω: {tweet_data}",
            "api_key_used": api_key
        })

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    with app.app_context():
        db.create_all()
        print("‚úÖ Database initialized")

    print("‚úÖ Server ready: http://127.0.0.1:8000")
    print("üîß –ê–≤—Ç–æ–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API key: 'test' ‚Üí 'test-key'")
    return app